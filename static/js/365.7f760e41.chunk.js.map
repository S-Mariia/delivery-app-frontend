{"version":3,"file":"static/js/365.7f760e41.chunk.js","mappings":"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","sources":["modules/UserForm/UserForm.styled.js","modules/UserForm/form-fields.js","modules/UserForm/form-initual-values.js","modules/UserForm/validation-schema.js","shared/components/Modal/Modal.styled.jsx","shared/components/Modal/Modal.jsx","modules/CongratsModal/CongratsModal.styled.js","modules/CongratsModal/CongratsModal.jsx","modules/UserForm/UserForm.jsx","modules/Cart/Cart.styled.js","modules/Cart/CartItem/CarItem.styled.js","modules/Cart/CartItem/CarItem.jsx","modules/Cart/Cart.jsx","pages/ShoppingCartPage/ShoppingCartPage.styled.js","pages/ShoppingCartPage/ShoppingCartPage.jsx","redux/selectors.js","shared/components/TextField/TextField.styled.js","shared/components/FormError/FormError.styled.js","shared/components/FormError/FormError.jsx","shared/components/TextField/TextField.jsx","shared/constants/validationRegExp.js"],"sourcesContent":["import styled from 'styled-components';\nimport { accentColor, mainColor } from 'shared/constants/colors';\n\nexport const Wrapper = styled.div`\n  width: 350px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 10px 16px;\n  background-color: ${accentColor};\n  border-radius: 15px;\n  border: 3px solid transparent;\n  font-size: 18px;\n  font-weight: 500;\n  color: ${mainColor};\n  transition: border 250ms linear;\n  margin: 26px auto 0;\n`;\n\nexport const Label = styled.p`\n  margin-bottom: 12px;\n  font-weight: 400;\n  font-size: 18px;\n  color: ${accentColor};\n  border-bottom: 1px solid ${accentColor};\n`;\n","const fields = {\n  name: {\n    name: 'name',\n    type: 'text',\n    label: 'Name',\n    placeholder: 'Type your name',\n  },\n  email: {\n    name: 'email',\n    type: 'text',\n    label: 'Email',\n    placeholder: 'Type your email',\n  },\n  phone: {\n    name: 'phone',\n    type: 'text',\n    label: 'Phone',\n    placeholder: 'Type your phone',\n  },\n  address: {\n    name: 'address',\n    type: 'text',\n    label: 'Address',\n    placeholder: 'Type your address',\n  },\n};\n\nexport default fields;\n","const initialValues = {\n  name: '',\n  email: '',\n  phone: '+380',\n  address: '',\n};\n\nexport default initialValues;\n","import * as Yup from 'yup';\n\nimport {\n  nameRegExp,\n  emailRegExp,\n  phoneRegExp,\n} from 'shared/constants/validationRegExp';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Enter a name that is at least 2 letters long')\n    .max(32, 'Please shorten your name to 32 characters or less')\n    .matches(nameRegExp, 'A name can only contain letters')\n    .trim()\n    .required('Please enter your name'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a correct email')\n    .trim()\n    .required('Please enter your email'),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Enter a phone in a format +380000000000')\n    .trim()\n    .required('Please enter your phone number'),\n  address: Yup.string()\n    .min(4, 'Please include more details')\n    .trim()\n    .required('Please enter your address'),\n});\n\nexport default validationSchema;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(43, 43, 43, 0.6);\n  backdrop-filter: blur(10px);\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  flex-direction: column;\n  top: 50%;\n  left: 50%;\n  background-color: #fff;\n  transform: translate(-50%, -50%);\n  min-height: 400px;\n  max-width: 400px;\n  width: 100%;\n  padding: 12px;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n`;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, Wrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDowm = e => {\n      if (e.code === 'Escape') onClose();\n    };\n    window.addEventListener('keydown', handleKeyDowm);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      window.removeEventListener('keydown', handleKeyDowm);\n      document.body.style.overflow = '';\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Wrapper>{children}</Wrapper>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { errorColor } from 'shared/constants/colors';\n\nexport const Button = styled(Link)`\n  font-size: 18px;\n  color: ${errorColor};\n`;\n\nexport const Title = styled.h2`\n  font-size: 28px;\n  margin-bottom: 12px;\n`;\n\nexport const Message = styled.p`\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n","import { Button, Title, Message } from './CongratsModal.styled';\nconst CongratsModal = () => {\n  return (\n    <div>\n      <Title>Congratulations!🎉</Title>\n      <Message>Your order has been accepted. Wait for the courier</Message>\n      <Button to=\"/\">Go shopping more</Button>\n    </div>\n  );\n};\n\nexport default CongratsModal;\n","import { Formik, Form } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport { selectCart } from 'redux/selectors';\nimport { clearCart } from 'redux/slice';\n\nimport formFields from './form-fields';\nimport initialValues from './form-initual-values';\nimport validationSchema from './validation-schema';\n\nimport { createOrder } from 'shared/services/api';\n\nimport TextField from 'shared/components/TextField/TextField';\nimport { Wrapper, Button, Label } from './UserForm.styled';\n\nimport Modal from 'shared/components/Modal/Modal';\nimport CongratsModal from 'modules/CongratsModal/CongratsModal';\n\nconst UserForm = () => {\n  const [formSent, setFormSet] = useState(false);\n  const [error, setError] = useState(null);\n\n  const dispatch = useDispatch();\n  const cart = useSelector(selectCart);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async values => {\n    const result = {\n      customerData: { ...values },\n      order: [...cart],\n    };\n    if (cart.length === 0) {\n      toast('Add something to card first', {\n        style: {\n          borderRadius: '10px',\n          background: 'darkred',\n          color: '#fff',\n        },\n      });\n      return;\n    }\n    try {\n      setError(false);\n      await createOrder(result);\n      dispatch(clearCart());\n      setFormSet(true);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Label>Enter your details to complete the order</Label>\n      <Formik\n        initialValues={{ ...initialValues }}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        validateOnMount={false}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form autoComplete=\"off\">\n            <TextField errors={errors} touched={touched} {...formFields.name} />\n            <TextField\n              errors={errors}\n              touched={touched}\n              {...formFields.email}\n            />\n            <TextField\n              errors={errors}\n              touched={touched}\n              {...formFields.phone}\n            />\n            <TextField\n              errors={errors}\n              touched={touched}\n              {...formFields.address}\n            />\n            <Button type=\"submit\">Make an order</Button>\n          </Form>\n        )}\n      </Formik>\n\n      {error &&\n        toast(error, {\n          icon: '🤯',\n          style: {\n            borderRadius: '10px',\n            background: 'darkred',\n            color: '#FFF',\n          },\n        })}\n      {formSent && (\n        <Modal\n          onClose={() => {\n            navigate('/');\n          }}\n        >\n          <CongratsModal />\n        </Modal>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default UserForm;\n","import styled from 'styled-components';\nimport { errorColor } from 'shared/constants/colors';\n\nexport const List = styled.ul`\n  max-height: 645px;\n  overflow-y: scroll;\n  padding: 15px;\n  margin-bottom: 18px;\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  flex-grow: 1;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  width: 120px;\n  margin: 0 20px 4px auto;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  background-color: transparent;\n  border-radius: 15px;\n  border: 3px solid transparent;\n  font-size: 18px;\n  font-weight: 500;\n  color: ${errorColor};\n  transition: border 250ms linear;\n  margin: 0 12px 0 auto;\n\n  &:hover {\n    border: 3px solid ${errorColor};\n  }\n\n  & > svg {\n    fill: ${errorColor};\n  }\n`;\n\nexport const Warning = styled.div`\n  padding-top: 12px;\n  width: 600px;\n  margin: 0 auto;\n  font-size: 20px;\n  color: ${errorColor};\n`;\n","import styled from 'styled-components';\nimport { accentColor } from 'shared/constants/colors';\n\nexport const Item = styled.li`\n  position: relative;\n  padding: 18px;\n  width: 100%;\n  display: flex;\n  gap: 16px;\n  align-items: flex-end;\n  border-radius: 20px;\n  box-shadow: -1px 3px 22px -4px rgba(42, 42, 42, 0.63);\n  margin-bottom: 12px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 16px;\n  background-color: transparent;\n  border-radius: 15px;\n  border: 3px solid transparent;\n  font-size: 18px;\n  color: #2a2a2a;\n  transition: border 250ms linear;\n\n  &:hover {\n    border: 3px solid ${accentColor};\n  }\n`;\n\nexport const Description = styled.div`\n  padding-bottom: 16px;\n`;\n\nexport const Title = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n  width: 85%;\n  margin-bottom: 20px;\n`;\n\nexport const Price = styled.p`\n  font-size: 18px;\n  margin-bottom: 20px;\n`;\n\nexport const Span = styled.span`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const QuantityWraper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n\nexport const CustomSpan = styled.span`\n  font-size: 23px;\n  font-weight: 500;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { GiShoppingCart } from 'react-icons/gi';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\n\nimport { removeItemFromCart, updateItemQuantity } from 'redux/slice';\n\nimport {\n  Item,\n  Button,\n  Description,\n  Title,\n  Price,\n  Span,\n  QuantityWraper,\n  Btn,\n  CustomSpan,\n} from './CarItem.styled';\nimport defaultImage from 'shared/images/burger.jpeg';\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const [quantity, setQuantity] = useState(item.quantity);\n\n  const handleDecreaseQuantity = () => {\n    if (quantity === 1 || quantity === '1') {\n      return;\n    }\n    dispatch(\n      updateItemQuantity({ _id: item._id, quantity: Number(quantity) - 1 })\n    );\n    setQuantity(Number(quantity) - 1);\n  };\n  const handleIncreaseQuantity = () => {\n    dispatch(\n      updateItemQuantity({ _id: item._id, quantity: Number(quantity) + 1 })\n    );\n    setQuantity(Number(quantity) + 1);\n  };\n\n  return (\n    <Item>\n      <img src={item.imageUrl || defaultImage} alt={item.name} width={260} />\n      <Description>\n        <Title>{item.name}</Title>\n        <Price>\n          Price: <Span>{item.price * item.quantity}₴</Span>\n        </Price>\n        <QuantityWraper>\n          <Btn onClick={handleDecreaseQuantity}>\n            <FaMinus size={20} />\n          </Btn>\n          <CustomSpan>{quantity}</CustomSpan>\n          <Btn onClick={handleIncreaseQuantity}>\n            <FaPlus size={20} />\n          </Btn>\n        </QuantityWraper>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            dispatch(removeItemFromCart(item._id));\n          }}\n        >\n          Remove from <GiShoppingCart size={26} />\n        </Button>\n      </Description>\n    </Item>\n  );\n};\n\nexport default CartItem;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { GiShoppingCart } from 'react-icons/gi';\n\nimport { clearCart } from 'redux/slice';\n\nimport { selectCart } from 'redux/selectors';\n\nimport { List, Paragraph, Button, Warning, Wrapper } from './Cart.styled';\nimport { CustomSpan } from './CartItem/CarItem.styled';\n\nimport CartItem from './CartItem/CarItem';\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCart);\n  const totalPrice = cartItems.reduce(\n    (acc, { quantity, price }) => quantity * price + acc,\n    0\n  );\n  return (\n    <>\n      {cartItems.length > 0 && (\n        <Wrapper>\n          <List>\n            {cartItems.map(item => (\n              <CartItem key={item._id} item={item} />\n            ))}\n          </List>\n          <Paragraph>\n            Total: <CustomSpan>{totalPrice}₴</CustomSpan>\n          </Paragraph>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              dispatch(clearCart());\n            }}\n          >\n            Clear <GiShoppingCart size={25} />\n          </Button>\n        </Wrapper>\n      )}\n      {cartItems.length === 0 && (\n        <Warning>You haven't added any goods to the cart yet</Warning>\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n","import styled from 'styled-components';\n\nexport const FlexWrapper = styled.div`\n  padding-top: 32px;\n  padding-bottom: 16px;\n  display: flex;\n  gap: 48px;\n`;\n","import UserForm from 'modules/UserForm/UserForm';\nimport Cart from '../../modules/Cart/Cart';\n\nimport { Container } from 'shared/components/Container/Container.styled';\nimport { FlexWrapper } from './ShoppingCartPage.styled';\n\nconst ShoppingCartPage = () => {\n  return (\n    <Container>\n      <FlexWrapper>\n        <UserForm />\n        <Cart />\n      </FlexWrapper>\n    </Container>\n  );\n};\n\nexport default ShoppingCartPage;\n","export const selectCurrentShopId = state => state.currentShopId;\nexport const selectCart = state => state.cart;\nexport const selectHistory = state => state.history;\nexport const selectHistoryLoading = state => state.isHistoryLoading;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nimport { accentColor, errorColor } from 'shared/constants/colors';\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 4px;\n  color: #2a2a2a;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding-left: 12px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  font-size: 18px;\n  border: 2px solid\n    ${({ name, errors, touched }) => {\n      return errors[name] && touched[name] ? errorColor : accentColor;\n    }};\n  border-radius: 20px;\n`;\n\nexport const TextErrorCss = styled.span`\n  color: ${errorColor};\n  font-size: 16px;\n  margin-top: 8px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n`;\n","import styled from 'styled-components';\nimport { errorColor } from 'shared/constants/colors';\n\nexport const ErrorText = styled.p`\n  color: ${errorColor};\n  font-size: 16px;\n  margin: 4px 2px 0;\n  width: auto;\n`;\n","import { ErrorMessage } from 'formik';\nimport { ErrorText } from './FormError.styled';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport default FormError;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, Wrapper } from './TextField.styled';\nimport FormError from '../FormError/FormError';\n\nconst TextField = ({ errors, touched, label, name, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <Wrapper>\n      <Label htmlFor={id}>{label}</Label>\n      <Input errors={errors} touched={touched} id={id} name={name} {...props} />\n      <FormError name={name} />\n    </Wrapper>\n  );\n};\n\nexport default TextField;\n","// eslint-disable-next-line\nexport const nameRegExp = /^[a-zA-Z ]+$/;\n// eslint-disable-next-line\nexport const emailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n// eslint-disable-next-line\nexport const phoneRegExp = /^\\+380\\d{9}$/;\n"],"names":["Wrapper","styled","Button","accentColor","mainColor","Label","name","type","label","placeholder","email","phone","address","Yup","min","max","matches","nameRegExp","trim","required","emailRegExp","phoneRegExp","Backdrop","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDowm","e","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","target","Link","errorColor","Title","Message","to","useState","formSent","setFormSet","error","setError","dispatch","useDispatch","cart","useSelector","selectCart","navigate","useNavigate","handleSubmit","values","result","customerData","order","length","toast","borderRadius","background","color","createOrder","clearCart","message","initialValues","validationSchema","validateOnBlur","validateOnMount","onSubmit","errors","touched","autoComplete","TextField","formFields","icon","List","Paragraph","Warning","Item","Description","Price","Span","QuantityWraper","Btn","CustomSpan","item","quantity","setQuantity","src","imageUrl","defaultImage","alt","width","price","updateItemQuantity","_id","Number","size","removeItemFromCart","cartItems","totalPrice","reduce","acc","map","FlexWrapper","selectCurrentShopId","state","currentShopId","selectHistory","history","selectHistoryLoading","isHistoryLoading","Input","Field","ErrorText","render","props","id","useMemo","nanoid","htmlFor"],"sourceRoot":""}