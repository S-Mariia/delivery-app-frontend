{"version":3,"file":"static/js/64.75a256c4.chunk.js","mappings":"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","sources":["modules/UserForm/UserForm.styled.js","pages/OrderHistoryPage/UserDataForm/form-fields.js","pages/OrderHistoryPage/UserDataForm/form-initial-values.js","pages/OrderHistoryPage/UserDataForm/validation-schema.js","pages/OrderHistoryPage/UserDataForm/UserDataForm.styled.js","pages/OrderHistoryPage/UserDataForm/UserDataForm.jsx","pages/OrderHistoryPage/HistoryList/HistoryItem/HistoryItem.styled.js","pages/OrderHistoryPage/HistoryList/HistoryItem/HistoryItem.jsx","pages/OrderHistoryPage/HistoryList/HistoryList.styled.js","pages/OrderHistoryPage/HistoryList/HistoryList.jsx","pages/OrderHistoryPage/OrderHistoryPage.jsx","redux/selectors.js","shared/components/TextField/TextField.styled.js","shared/components/FormError/FormError.styled.js","shared/components/FormError/FormError.jsx","shared/components/TextField/TextField.jsx","shared/constants/validationRegExp.js"],"sourcesContent":["import styled from 'styled-components';\nimport { accentColor, mainColor } from 'shared/constants/colors';\n\nexport const Wrapper = styled.div`\n  width: 350px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 10px 16px;\n  background-color: ${accentColor};\n  border-radius: 15px;\n  border: 3px solid transparent;\n  font-size: 18px;\n  font-weight: 500;\n  color: ${mainColor};\n  transition: border 250ms linear;\n  margin: 26px auto 0;\n`;\n\nexport const Label = styled.p`\n  margin-bottom: 12px;\n  font-weight: 400;\n  font-size: 18px;\n  color: ${accentColor};\n  border-bottom: 1px solid ${accentColor};\n`;\n","const fields = {\n  email: {\n    name: 'email',\n    type: 'text',\n    label: 'Email',\n    placeholder: 'Type your email',\n  },\n  phone: {\n    name: 'phone',\n    type: 'text',\n    label: 'Phone',\n    placeholder: 'Type your phone',\n  },\n};\n\nexport default fields;\n","const initialValues = {\n  email: '',\n  phone: '+380',\n};\n\nexport default initialValues;\n","import * as Yup from 'yup';\n\nimport { emailRegExp, phoneRegExp } from 'shared/constants/validationRegExp';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a correct email')\n    .trim()\n    .required('Please enter your email'),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Enter a phone in a format +380000000000')\n    .trim()\n    .required('Please enter your phone number'),\n});\n\nexport default validationSchema;\n","import styled from 'styled-components';\nimport { accentColor } from 'shared/constants/colors';\n\nexport const Wrapper = styled.div`\n  width: 350px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FormLabel = styled.p`\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  color: ${accentColor};\n  margin-bottom: 24px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport formFields from './form-fields';\nimport initialValues from './form-initial-values';\nimport validationSchema from './validation-schema';\n\nimport { getOrderHistory } from 'redux/operations';\n\nimport TextField from 'shared/components/TextField/TextField';\nimport { FormLabel, Wrapper } from './UserDataForm.styled';\nimport { Button } from 'modules/UserForm/UserForm.styled';\n\nconst UserDataForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async values => {\n    const { email, phone } = values;\n    const updatedPhone = phone.slice(1);\n    dispatch(getOrderHistory({ email, phone: updatedPhone }));\n  };\n\n  return (\n    <Wrapper>\n      <FormLabel>\n        In order to view the history of your orders, fill out the form.\n      </FormLabel>\n      <Formik\n        initialValues={{ ...initialValues }}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        validateOnMount={false}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form autoComplete=\"off\">\n            <TextField\n              errors={errors}\n              touched={touched}\n              {...formFields.email}\n            />\n            <TextField\n              errors={errors}\n              touched={touched}\n              {...formFields.phone}\n            />\n            <Button type=\"submit\">Get history</Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default UserDataForm;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 93%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 16px 16px 8px;\n  box-shadow: -1px 3px 22px -4px rgba(42, 42, 42, 0.63);\n  border-radius: 20px;\n  margin-bottom: 16px;\n  display: flex;\n`;\n\nexport const ProductsWrapper = styled.div`\n  flex-grow: 1;\n  padding: 5px;\n  max-width: 850px;\n  overflow-x: scroll;\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 3px;\n    height: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  display: flex;\n  align-items: center;\n\n  gap: 12px;\n`;\n\nexport const ProductCard = styled.li`\n  min-width: 400px;\n  width: 400px;\n  display: flex;\n  align-items: center;\n  box-shadow: 0px 0px 4px 0px rgba(42, 42, 42, 1);\n  border-radius: 10px;\n  gap: 12px;\n  overflow: hidden;\n`;\n\nexport const ProductDescription = styled.div`\n  width: 160px;\n`;\n\nexport const OrderDetails = styled.div`\n  width: 240px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Price = styled.p`\n  font-size: 19px;\n`;\n\nexport const Span = styled.span`\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const Title = styled.p`\n  font-size: 19px;\n  margin-bottom: 12px;\n`;\n\nexport const Text = styled.p`\n  font-size: 17px;\n  margin-bottom: 12px;\n`;\n","import {\n  Item,\n  ProductsWrapper,\n  ProductCard,\n  ProductDescription,\n  ProductsList,\n  OrderDetails,\n  Price,\n  Span,\n  Text,\n  Title,\n} from './HistoryItem.styled';\n\nimport defaultImage from 'shared/images/burger.jpeg';\n\nconst getTotalPrice = order => {\n  return order.reduce((acc, { quantity, price }) => quantity * price + acc, 0);\n};\n\nconst HistoryItem = ({ item }) => {\n  const { order } = item;\n  return (\n    <Item>\n      <ProductsWrapper>\n        <ProductsList>\n          {order.map(({ imageUrl, name, price, quantity }, idx) => (\n            <ProductCard key={idx}>\n              <img src={imageUrl || defaultImage} alt={name} width={215} />\n              <ProductDescription>\n                <Title>{name}</Title>\n                <Text>Quantity: {quantity}</Text>\n                <Price>{price * quantity}₴</Price>\n              </ProductDescription>\n            </ProductCard>\n          ))}\n        </ProductsList>\n      </ProductsWrapper>\n      <OrderDetails>\n        <Price>\n          Total price: <Span>{getTotalPrice(order)}₴</Span>\n        </Price>\n      </OrderDetails>\n    </Item>\n  );\n};\n\nexport default HistoryItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 24px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectHistory, selectHistoryLoading } from 'redux/selectors';\nimport Loader from 'shared/components/Loader/Loader';\nimport HistoryItem from './HistoryItem/HistoryItem';\nimport { List } from './HistoryList.styled';\n\nconst HistoryList = () => {\n  const history = useSelector(selectHistory);\n  const isLoading = useSelector(selectHistoryLoading);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <List>\n          {history.map(item => (\n            <HistoryItem key={item._id} item={item} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default HistoryList;\n","import UserDataForm from './UserDataForm/UserDataForm';\nimport HistoryList from './HistoryList/HistoryList';\n\nimport { Container } from 'shared/components/Container/Container.styled';\n\nconst OrderHistoryPage = () => {\n  return (\n    <Container>\n      <UserDataForm />\n      <HistoryList />\n    </Container>\n  );\n};\n\nexport default OrderHistoryPage;\n","export const selectCurrentShopId = state => state.currentShopId;\nexport const selectCart = state => state.cart;\nexport const selectHistory = state => state.history;\nexport const selectHistoryLoading = state => state.isHistoryLoading;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nimport { accentColor, errorColor } from 'shared/constants/colors';\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 4px;\n  color: #2a2a2a;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding-left: 12px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  font-size: 18px;\n  border: 2px solid\n    ${({ name, errors, touched }) => {\n      return errors[name] && touched[name] ? errorColor : accentColor;\n    }};\n  border-radius: 20px;\n`;\n\nexport const TextErrorCss = styled.span`\n  color: ${errorColor};\n  font-size: 16px;\n  margin-top: 8px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n`;\n","import styled from 'styled-components';\nimport { errorColor } from 'shared/constants/colors';\n\nexport const ErrorText = styled.p`\n  color: ${errorColor};\n  font-size: 16px;\n  margin: 4px 2px 0;\n  width: auto;\n`;\n","import { ErrorMessage } from 'formik';\nimport { ErrorText } from './FormError.styled';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport default FormError;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, Wrapper } from './TextField.styled';\nimport FormError from '../FormError/FormError';\n\nconst TextField = ({ errors, touched, label, name, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <Wrapper>\n      <Label htmlFor={id}>{label}</Label>\n      <Input errors={errors} touched={touched} id={id} name={name} {...props} />\n      <FormError name={name} />\n    </Wrapper>\n  );\n};\n\nexport default TextField;\n","// eslint-disable-next-line\nexport const nameRegExp = /^[a-zA-Z ]+$/;\n// eslint-disable-next-line\nexport const emailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n// eslint-disable-next-line\nexport const phoneRegExp = /^\\+380\\d{9}$/;\n"],"names":["Wrapper","styled","Button","accentColor","mainColor","Label","email","name","type","label","placeholder","phone","Yup","matches","emailRegExp","trim","required","phoneRegExp","FormLabel","dispatch","useDispatch","handleSubmit","values","updatedPhone","slice","getOrderHistory","initialValues","validationSchema","validateOnBlur","validateOnMount","onSubmit","errors","touched","autoComplete","TextField","formFields","Item","ProductsWrapper","ProductsList","ProductCard","ProductDescription","OrderDetails","Price","Span","Title","Text","getTotalPrice","order","reduce","acc","quantity","price","item","map","idx","imageUrl","src","defaultImage","alt","width","List","history","useSelector","selectHistory","isLoading","selectHistoryLoading","Loader","_id","selectCurrentShopId","state","currentShopId","selectCart","cart","isHistoryLoading","Input","Field","errorColor","ErrorText","render","message","props","id","useMemo","nanoid","htmlFor","nameRegExp"],"sourceRoot":""}